@use "sass:map";
@import '../global.scss';

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

%activeHover {
  &.activeHover {
    &:hover {
      border: 1px solid $border-color-hover;
      box-shadow: 0 0 0 1px $border-color-hover,
      0 0 2px 3px rgba(255, 255, 255, 1);
      background-color: lighten($button-bg, 5%);
    }

    &:active {
      background-color: var($button-active-bg);
      backface-visibility: hidden;
      transform: $--pressed-scale;
    }
  }
}

@mixin setColorType($background: $button-bg) {
  background: $background;
  // 普通按钮
  @if $background == $button-bg {
    color: #333;
    border: 1px solid $border-color;
    @extend %activeHover;

  } @else {
    // 彩色按钮
    color: #fff;
    border: 0 solid transparent;

    &.activeHover {
      &:hover {
        background: lighten($background, 10%);
        border: 0 solid transparent;
        // 代替 border
        box-shadow: 0 0 0 1px $background,
        0 0 1px 1px $background;
      }

      &:active {
        background: darken($background, 3%);
      }
    }
  }

}

.vue-button-wrapper {
  display: inline-block;
  white-space: nowrap;

  .vue-button {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    vertical-align: middle;
    font-size: $font-size;
    height: $button-height;
    padding: 0 0.73em;
    border-radius: $border-radius;
    border: 1px solid $border-color;
    background: $button-bg;
    color: #000;

    // 相邻组件间隔
    & + & {
      margin-left: 8px;
    }

    &:focus {
      outline: none;
    }

    &::-moz-focus-inner {
      border: 0;
    }

    &.content {
      white-space: nowrap;
    }

    &.is-disabled-fake {
      color: mix(#000, #FFF);
      background-color: mix($button-bg, #FFF);
      border-color: mix($border-color, #FFF);
      cursor: not-allowed;
    }

    &.is-disabled {
      color: #DDD;
      background-color: mix($button-bg, #FFF);
      border-color: mix($border-color, #FFF);
      cursor: not-allowed;
    }

    @extend %activeHover;

    // vue-button colors
    $color-types: (
      'normal': $normal-color,
      'primary': $primary,
      'danger': $danger,
      'info': $info,
      'success': $success,
      'warning': $warning,
      'attention': $attention
    );
    @each $name, $type in $color-types {
      &-#{$name} {
        @include setColorType($type);
      }
    }

    // button-theme
    // button link text
    &-theme-link {
      background-color: #fff;
      border-color: transparent;
      box-shadow: none;
      color: $light-font-color;

      &:hover,
      &:focus {
        box-shadow: none;
        border-color: transparent;
        color: lighten($light-font-color, 10%);
      }
    }

    &-theme-text {
      border-color: transparent;
      box-shadow: none;
      color: inherit;

      &:hover,
      &:focus {
        box-shadow: none;
        border-color: transparent;
        background: darken(white, 5%);;
      }

    }

    // button sizes
    $font-sizes: (
      'small': (font-size: $font-size-small, button-size: 24px),
      'normal': (font-size: $font-size, button-size: 32px),
      'big': (font-size: $font-size-big, button-size: 48px),
    );
    @each $name, $types in $font-sizes {
      &-size-#{$name} {
        font-size: map.get($types, font-size);
        height: map.get($types, button-size);
      }
    }

    // Icon
    /* ali iconfont common css */
    > .vue-svg {
      width: 1em;
      height: 1em;
      margin-right: 0.3em;
      margin-left: 0;
      margin-top: 0.1em;
      fill: currentColor;
      overflow: hidden;
      order: 1;
      //fill: red;
    }

    > .content {
      order: 2;
    }

    &.icon-right {
      > .vue-svg {
        order: 2;
        margin-left: 0.3em;
        margin-right: 0;
        margin-top: 0.1em;
      }

      > .content {
        order: 1;
      }
    }

    // animation
    .loading {
      animation: spin 1s infinite linear;
    }
  }
}
